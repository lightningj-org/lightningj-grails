buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/asciidoctor/maven/"}
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        // Documentation generation
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
        classpath 'org.ajoberstar:gradle-git-publish:0.3.2'
    }
}

version "0.5.0-Beta"
group "org.lightningj"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin: 'signing'
apply plugin: 'org.ajoberstar.git-publish'
apply plugin: 'org.asciidoctor.convert'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-controllers"
    provided "org.grails:grails-plugin-domain-class"

   // provided  "org.grails:grails-web-boot"
    //provided "org.grails:grails-plugin-rest"
    provided "javax.servlet:javax.servlet-api:3.1.0" // Required in order for Message Renderer to compile
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "cglib:cglib-nodep:3.2.6"

    // The lightningj library
    compile "org.lightningj:lightningj:0.5.0-Beta"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

asciidoctor {
    sourceDir = file('docs')
    outputDir = file('build/docs')
    attributes= [stylesheet: "$projectDir/docs/stylesheets/colony.css",
                 toc: 'left', 'toc-title': 'Table of Contents'
    ]
}

task ('doc',type: Copy,dependsOn: [ asciidoctor]){
    from('build/docs/'){
        include('javadoc/**')
    }
    from('LICENSE.txt'){
    }
    from('docs'){
        include('CNAME')
    }
    into('build/docs/html5')
}

// This copy is necessary for grails to publish/install using gradle 4.5
// jar task is set to be dependant on this task.
task ('copyGrailsPluginXML',type: Copy){
    from('build/classes/groovy/main/META-INF'){
        include('grails-plugin.xml')
    }
    into('build/classes/java/main/META-INF')
}



gitPublish {
    // where to publish to (repo must exist)
    repoUri = 'https://github.com/lightningj-org/lightningj-grails.git'
    // (or 'https://github.com/ajoberstar/test-repo.git', depending on authentication)

    // branch will be created if it doesn't exist
    branch = 'gh-pages'

    // generally, you don't need to touch this
    //repoDir = file("$buildDir/somewhereelse") // defaults to $buildDir/gitPublish

    // what to publish, this is a standard CopySpec
    contents {
        from 'build/docs/html5'
    }

    // what to keep in the existing branch (include=keep)
//    preserve {
//        include '1.0.0/**'
//        exclude '1.0.0/temp.txt'
//    }

    // message used when committing changes
    commitMessage = 'Publishing a new page' // defaults to 'Generated by gradle-git-publish'
}

artifacts {
    archives javadocJar, sourcesJar

}


// Use external gpg2 command to support signing by hardware keys (i.e. trezor) and sign only
// if build should be uploaded to Maven Central.
// Signing is done with bintrays internal signing for now
//signing {
//    required { gradle.taskGraph.hasTask(bintrayUpload) }
//    useGpgCmd()
    //sign configurations.archives
//}

//signArchives.onlyIf {gradle.taskGraph.hasTask(bintrayUpload)}


// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

grailsPublish {
    githubSlug = 'lightningj-org/lightningj-grails'
    license {
        name = 'LGPL-3.0'
    }
    title = "Lightningj Grails"
    desc = "Grails 3.x Plugin to integrate LightningJ into a Grails application."
    developers = [herrvendil:"Philip Vendil"]

}

// Signing is done with bintrays internal signing for now
//bintrayUpload.dependsOn.add(signArchives)
jar.dependsOn.add(copyGrailsPluginXML)

